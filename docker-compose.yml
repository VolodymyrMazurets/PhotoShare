
version: "3"

services:
  # postgres:
  #   image: postgres:14
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD?Variable not set}
  #     POSTGRES_USER: ${POSTGRES_USER?Variable not set}
  #     POSTGRES_DB: ${POSTGRES_DB?Variable not set}
  #   ports:
  #     - ${PORT}:5432
  #   volumes:
  #     - photoshare-db-data:/var/lib/postgresql/data:cached
  #   healthcheck:
  #     test: ['CMD-SHELL', 'pg_isready -U postgres']
  #     interval: 5s
  #     timeout: 5s
  #     retries: 20
  #   networks:
  #     - default
  #     - adminer-network
  
  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    volumes:
      - redis:/data/redis
    ports:
      - '${PORT}:6379'

  # adminer:
  #   image: adminer
  #   ports:
  #     - ${PORT}:8080
  #   restart: always
  #   depends_on:
  #     - postgres
  #   environment:
  #     ADMINER_DEFAULT_SERVER: postgres
  #     ADMINER_DESIGN: pepa-linha-dark
  #   networks:
  #     - adminer-network

  backend:
    build: './backend'
    restart: always
    environment:
      - DOMAIN=${DOMAIN}
      - API_V1_STR=${API_V1_STR}
      - ENVIRONMENT=${ENVIRONMENT}
      - PROJECT_NAME=${PROJECT_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - SMTP_PORT=${SMTP_PORT}
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - REDIS_HOST_=${REDIS_HOST_}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - FRONTEND_URL=${FRONTEND_URL}
      - BACKEND_URL=${BACKEND_URL}
      - ADMINER_URL=${ADMINER_URL}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
    ports:
      - "${PORT}:8000"
    networks:
      - default

  # frontend:
  #   build: './frontend'
  #   restart: always
  #
  #   volumes:
  #     - /app/node_modules
  #     - ./frontend:/app
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend
  #   environment:
  #     - BACKEND_URL=${BACKEND_URL}
  #     - API_V1_STR=${API_V1_STR}
  #   networks:
  #     - default

volumes:
  photoshare-db-data: {}
  redis: {}


