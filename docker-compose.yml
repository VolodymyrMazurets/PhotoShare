
version: "3"

services:
  postgres:
    image: postgres:14
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD?Variable not set}
      POSTGRES_USER: ${POSTGRES_USER?Variable not set}
      POSTGRES_DB: ${POSTGRES_DB?Variable not set}
    ports:
      - 5432:5432
    volumes:
      - photoshare-db-data:/var/lib/postgresql/data:cached
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - default
      - adminer-network
  
  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - redis:/data/redis
    ports:
      - '6379:6379'

  adminer:
    image: adminer
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha-dark
    networks:
      - adminer-network

  backend:
    build: './backend'
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    volumes:
      - ./backend:/app
      - /app/.venv
    environment:
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - SMTP_PORT=${SMTP_PORT}
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - FRONTEND_URL=${FRONTEND_URL}
      - BACKEND_URL=${BACKEND_URL}
    ports:
      - "8000:8000"
    networks:
      - default

  frontend:
    build: './frontend'
    restart: always
    volumes:
      - /app/node_modules
      - ./frontend:/app
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - BACKEND_URL=${BACKEND_URL}
    networks:
      - default

volumes:
  photoshare-db-data: {}
  redis: {}

networks:
  adminer-network:
  app-network: 

